/*
Данный код также опубликован на GitHub со всеми библиотеками
Ссылка: https://github.com/Toprojects/Trenajer
Version 2.10
Date 20.01.2024
*/
#include "HX711.h"                                            // подключаем библиотеку для работы с тензодатчиком
#include <EEPROM.h>                                           // подключаем библиотеку для работы с данными
#include "Keyboard.h"                                         // подключаем библиотеку для работы с клавиатурой
//==============================================================================================================================================
uint8_t DOUT_PIN1 = 3;                                        // указываем вывод DOUT1, к которому подключен HX711
uint8_t SCK_PIN1  = 2;                                        // указываем вывод SCK1 , к которому подключен HX711
uint8_t DOUT_PIN2 = 5;                                        // указываем вывод DOUT2, к которому подключен HX711
uint8_t SCK_PIN2  = 4;                                        // указываем вывод SCK2 , к которому подключен HX711
uint8_t DOUT_PIN3 = 6;                                        // указываем вывод DOUT3, к которому подключен HX711
uint8_t SCK_PIN3  = 7;                                        // указываем вывод SCK3 , к которому подключен HX711
uint8_t DOUT_PIN4 = 9;                                        // указываем вывод DOUT4, к которому подключен HX711
uint8_t SCK_PIN4  = 8;                                        // указываем вывод SCK4 , к которому подключен HX711
//==============================================================================================================================================
int address1 = 1;                                             // переменная для хранения адреса
byte value1;                                                  // переменная для хранения значения
int address2 = 2;                                             // переменная для хранения адреса
byte value2;                                                  // переменная для хранения значения
int address3 = 3;                                             // переменная для хранения адреса
byte value3;                                                  // переменная для хранения значения
int address4 = 4;                                             // переменная для хранения адреса
byte value4;                                                  // переменная для хранения значения
//==============================================================================================================================================
HX711 scale1;                                                 // создаём объекты scale
HX711 scale2;
HX711 scale3;
HX711 scale4;
//==============================================================================================================================================
float calibration_factor1 = -0.64;                            // вводим калибровочный коэффициент !!!НАДО СНАЧАЛА КАЛИБРОВКУ ПРОВЕСТИ!!!
float units1;                                                 // задаём переменную для измерений в граммах
float ounces1;                                                // задаём переменную для измерений в унциях
float calibration_factor2 = -0.64;                            // вводим калибровочный коэффициент !!!НАДО СНАЧАЛА КАЛИБРОВКУ ПРОВЕСТИ!!!
float units2;                                                 // задаём переменную для измерений в граммах
float ounces2;                                                // задаём переменную для измерений в унциях
float calibration_factor3 = -0.64;                            // вводим калибровочный коэффициент !!!НАДО СНАЧАЛА КАЛИБРОВКУ ПРОВЕСТИ!!!
float units3;                                                 // задаём переменную для измерений в граммах
float ounces3;                                                // задаём переменную для измерений в унциях
float calibration_factor4 = -0.64;                            // вводим калибровочный коэффициент !!!НАДО СНАЧАЛА КАЛИБРОВКУ ПРОВЕСТИ!!!
float units4;                                                 // задаём переменную для измерений в граммах
float ounces4;                                                // задаём переменную для измерений в унциях
//==============================================================================================================================================
void setup() {
  Serial.begin(57600);                                        // инициируем работу последовательного порта на скорости 57600 бод
  scale1.begin(DOUT_PIN1, SCK_PIN1);
  scale2.begin(DOUT_PIN2, SCK_PIN2);                          // инициируем работу с датчиком
  scale3.begin(DOUT_PIN3, SCK_PIN3);
  scale4.begin(DOUT_PIN4, SCK_PIN4);
//==============================================================================================================================================
  scale1.set_scale();                                         // выполняем измерение значения без калибровочного коэффициента
  scale1.tare();                                              // сбрасываем значения веса на датчике1 в 0
  scale2.set_scale();                                         // выполняем измерение значения без калибровочного коэффициента
  scale2.tare();                                              // сбрасываем значения веса на датчике2 в 0
  scale3.set_scale();                                         // выполняем измерение значения без калибровочного коэффициента
  scale3.tare();                                              // сбрасываем значения веса на датчике3 в 0
  scale4.set_scale();                                         // выполняем измерение значения без калибровочного коэффициента
  scale4.tare();                                              // сбрасываем значения веса на датчике4 в 0
//==============================================================================================================================================
  scale1.set_scale(calibration_factor1);                      // устанавливаем калибровочный коэффициент1
  scale2.set_scale(calibration_factor2);                      // устанавливаем калибровочный коэффициент2
  scale3.set_scale(calibration_factor3);                      // устанавливаем калибровочный коэффициент3
  scale4.set_scale(calibration_factor4);                      // устанавливаем калибровочный коэффициент4
//==============================================================================================================================================
  Keyboard.begin();                                           // инициируем работы с клавиатурой
}
//==============================================================================================================================================
void loop() {
  Serial.print("Reading: ");                                  // выводим текст в монитор последовательного порта
  ounces1 = scale1.get_units(1);                              // получаем значение с датчика, усреднённое по 10 измерениям
  units1 = ounces1 * 0.0035274;                               // переводим вес из унций в граммы                                       
  value1 = units1 / 255;                                      // записываем значение в переменную и делим на 255 для фильтрации значений
  EEPROM.update(0,value1);                                    // обновляем память ардуино
  Serial.println(String(value1));                             // выводим значение
//==============================================================================================================================================
  ounces2 = scale2.get_units(1);                              // получаем значение с датчика, усреднённое по 10 измерениям
  units2 = ounces2 * 0.0035274;                               // переводим вес из унций в граммы                                       
  value2 = units2 / 255;                                      // записываем значение в переменную и делим на 255 для фильтрации значений
  EEPROM.update(0,value2);                                    // обновляем память ардуино
  Serial.println(String(value2));                             // выводим значение
//==============================================================================================================================================
  ounces3 = scale3.get_units(1);                              // получаем значение с датчика, усреднённое по 10 измерениям
  units3 = ounces3 * 0.0035274;                               // переводим вес из унций в граммы                                       
  value3 = units3 / 255;                                      // записываем значение в переменную и делим на 255 для фильтрации значений
  EEPROM.update(0,value3);                                    // обновляем память ардуино
  Serial.println(String(value3));                             // выводим значение
//==============================================================================================================================================
  ounces4 = scale4.get_units(1);                              // получаем значение с датчика, усреднённое по 10 измерениям
  units4 = ounces4 * 0.0035274;                               // переводим вес из унций в граммы                                       
  value4 = units4 / 255;                                      // записываем значение в переменную и делим на 255 для фильтрации значений
  EEPROM.update(0,value4);                                    // обновляем память ардуино
  Serial.println(String(value4));                             // выводим значение
//==============================================================================================================================================
  if (units1 > 100 && units2 > 100){                          // !!!укызвать значения наклона после тестов!!!
    Keyboard.press(119);
  }
  if (units1 > 100 && units4 > 100){
    Keyboard.press(97);
  }
  if (units2 > 100 && units3 > 100){
    Keyboard.press(100);
  }
  if (units3 > 100 && units4 > 100){
    Keyboard.press(115);
  }
  if (units1 > 150 && units2 > 150 && units3 > 150 && units4 > 150){
    Keyboard.press(32);
  }

}